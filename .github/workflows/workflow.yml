name: Deploy React to S3

on:
  push:
    branches:
      - main
      - staging

jobs:
  
  build:
    runs-on: ubuntu-latest    
    outputs:
      artifact_name: ${{ steps.set-env.outputs.artifact_name }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4


      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install

      - name: Extract App Name Version for artifact
        id: extract-info
        run: |
          APP_NAME=$(jq -r .name package.json)
          APP_VERSION=$(jq -r .version package.json)
          echo "APP_NAME=$APP_NAME" >> $GITHUB_OUTPUT
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_OUTPUT
          echo "artifact_name=$APP_NAME-$APP_VERSION" >> $GITHUB_OUTPUT

      - name: Build Project 
        run: |        
            npm run build          

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.extract-info.outputs.artifact_name }}
          path: build/

  detect-environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
    steps:    

      - name: Determine Environment
        id: set-env
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "environment=production" > $GITHUB_OUTPUT
          else
            echo "environment=staging" >> $GITHUB_OUTPUT
          fi                

  deploy:
    runs-on: ubuntu-latest
    needs: [detect-environment,build]
    environment: ${{ needs.detect-environment.outputs.environment }}  # Usamos el entorno calculado en detect-environment
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build.outputs.artifact_name }}
          path: build/

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Calculate S3 Bucket Name
        id: calculate-bucket
        run: |
          if [ "${{ needs.detect-environment.outputs.environment }}" == "production" ]; then
            echo "s3_bucket_name=${{ secrets.S3_BUCKET_PRODUCTION }}" >> $GITHUB_OUTPUT
          else
            echo "s3_bucket_name=${{ secrets.S3_BUCKET_STAGING }}" >> $GITHUB_OUTPUT
          fi
          
      - name: Deploy to S3
        run: |
          aws s3 sync build/ s3://${{ steps.calculate-bucket.outputs.s3_bucket_name }} --delete
